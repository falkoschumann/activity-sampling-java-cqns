import java.time.LocalDate

plugins {
  id "java"
  id "jacoco"
  id "pmd"
  id "com.diffplug.spotless"
  id "io.freefair.lombok"
}

version = rootProject.version

ext {
  copyrightYear = LocalDate.now().year
}

repositories {
  mavenCentral()
}

dependencies {
  testImplementation "org.junit.jupiter:junit-jupiter-api:5.7.2"
  testImplementation "org.hamcrest:hamcrest:2.2"
  testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

tasks.compileJava {
  options.encoding = "UTF-8"
}

java {
  sourceCompatibility = JavaVersion.VERSION_16
  targetCompatibility = JavaVersion.VERSION_16
  modularity.inferModulePath.set(true)
}

tasks {
  processResources {
    filesMatching("**/*.properties") {
      expand([version: version, copyrightYear: copyrightYear])
    }
  }
}

compileTestJava {
  options.encoding = "UTF-8"
}

test {
  useJUnitPlatform()
  testLogging {
    events "passed", "skipped", "failed"
    showExceptions = true
    exceptionFormat = "full"
  }
  finalizedBy jacocoTestReport
}

jacocoTestReport {
  dependsOn += tasks.test
}

pmd {
  ignoreFailures = true
  consoleOutput = true
  toolVersion = "6.38.0" // Support f√ºr Java 16 ab 6.32
  rulesMinimumPriority = 2
  ruleSets = []
  ruleSetFiles = files("${rootDir}/config/pmd-ruleset.xml")
}

spotless {
  java {
    googleJavaFormat()
    licenseHeaderFile "config/LicenseHeader.txt"
  }
}
